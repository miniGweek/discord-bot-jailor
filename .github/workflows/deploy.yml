# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, feature/test-linode-cli-script ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    environment: Production

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Linode cli
        uses: brendon1555/setup-linode-cli@master
        with:
          LINODE_CLI_TOKEN: ${{ secrets.LINODE_CLI_TOKEN }}

      - name: Firewall rules - add github pip and home pip
        shell: bash
        run: |
          chmod +x linode-firewall-rules-update.sh

          ./linode-firewall-rules-update.sh "addgithub-pip"

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.LINODE_JAILOR_SSH_PRIVATE_KEY }}
          name: id_rsa
          known_hosts: 'just a place holder for now'

      - name: Adding Known Hosts
        run: |
          ssh-keyscan -H ${{ secrets.LINODE_JAILOR_KNOWN_HOSTS }} >> ~/.ssh/known_hosts

      - name: Copy and deploy source
        shell: bash
        run: |
          echo "Start - Copy and Deploy"

          host=${{ secrets.LINODE_JAILOR_KNOWN_HOSTS }}
          remotehostuser="root@$host"

          remotehostwithlocation="$remotehostuser:/staging"

          echo "Uploading files to $remotehostwithlocation"

          scp -i /home/runner/.ssh/id_rsa main.py update_deployment.sh discord-bot-jailor.conf $remotehostwithlocation

          echo "SSH into remote server and run update_deployment.sh"

          ssh -i /home/runner/.ssh/id_rsa $remotehostuser 'chmod +x /staging/update_deployment.sh && /staging/update_deployment.sh'

          echo "End - Copy and Deploy"

      - name: Firewall rules - remove github pip and add home pip
        shell: bash
        run: |
          chmod +x linode-firewall-rules-update.sh

          ./linode-firewall-rules-update.sh "removegithub-pip"